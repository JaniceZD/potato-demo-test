{"version":3,"sources":["config/history.ts","config/axios.ts","components/Tomatoes/CountDown.tsx","components/SignUp/SignUp.tsx","components/Login/Login.tsx","redux/actions/todos.ts","redux/actionTypes.ts","components/Todos/TodoInput.tsx","components/Todos/TodoItem.tsx","components/Todos/Todos.tsx","components/Tomatoes/TomatoAction.tsx","components/Tomatoes/TomatoList.tsx","components/Tomatoes/Tomatoes.tsx","redux/actions/tomatoes.ts","components/Statistics/Polygon.tsx","components/Statistics/TodoHistory/TodoHistoryTodoItem.tsx","components/Statistics/TodoHistory/TodoHistory.tsx","components/Statistics/Statistics.tsx","components/Home/Home.tsx","App.tsx","serviceWorker.ts","redux/reducers/todos.ts","redux/reducers/tomatoes.ts","redux/reducers/index.ts","index.tsx"],"names":["publicUrl","history","createBrowserHistory","basename","n","instance","axios","create","baseURL","headers","interceptors","request","use","config","xToken","localStorage","getItem","error","Promise","reject","response","setItem","toString","undefined","status","location","pathname","push","timerId","SignUp","props","onChange","key","value","newState","setState","submit","a","state","account","password","passwordConformation","post","password_confirmation","console","log","Error","this","className","placeholder","prefix","type","style","color","suffix","title","allowClear","e","target","Password","block","onClick","bind","to","React","Component","Login","updateTodo","payload","editTodo","TodoInput","addTodo","description","postTodo","data","resource","onPressEnter","mapDispatchToProps","connect","ownProps","TodoItem","params","put","id","onKeyUp","keyCode","editText","Editing","deleted","Text","onDoubleClick","todoItemClass","classNames","editing","completed","checked","TreeNode","Tree","Todos","isTodoEditable","completed_at","Date","unCompletedTodos","map","t","update","showLine","switcherIcon","completedTodos","todos","filter","unDeletedTodos","CountDown","countDown","timer","setInterval","time","document","onFinish","clearInterval","percent","duration","width","min","Math","floor","second","confirm","Modal","TomatoAction","abortTomato","updateTomato","aborted","showConfirm","onOk","onCancel","cancelText","okText","forceUpdate","ended_at","unfishedTomato","html","startTomato","startTime","parse","started_at","timeNow","getTime","antIcon","fontSize","spin","TomatoItem","format","TomatoList","spinning","list","dates","d","tomatoes","finishedTomatoes","length","indicator","Object","keys","sort","b","splice","Tomatoes","addTomato","unfinishedTomato","_","groupBy","tomato","parseISO","Polygon","points","firstDay","range","finishedCount","finishedY","pointsArr","date","x","y","totalFinishedCount","join","height","preserveAspectRatio","fill","stroke","strokeWidth","strokeLinecap","TodoHistoryTodoItem","todo","formatText","action","itemType","updated_at","created_at","dayjs","TabPane","Tabs","TodoHistory","deletedTodoList","deletedTodos","defaultActiveKey","tab","finishedTodoList","finishedTodos","dailyTodos","week","finishedDates","parseInt","Statistics","dailyTomatoes","Tomato","Icon","createFromIconfontCN","scriptUrl","Home","getMe","get","user","getTodos","resources","initTodos","getTomatoes","initTomatoes","logout","handleOk","visible","handleCancel","showModal","onInputValChange","val","Number","notification","open","message","menu","Item","max","defaultValue","overlay","placement","preventDefault","App","exact","path","component","Boolean","window","hostname","match","combineReducers","store","createStore","rootReducers","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.da4fd8a2.chunk.js","sourcesContent":["import {createBrowserHistory} from 'history'\r\n\r\n// const history = createBrowserHistory()\r\n\r\nconst ENV = process.env.NODE_ENV;\r\n\r\nlet publicUrl: string = \"\";\r\n\r\nif (ENV === \"development\") {\r\n    publicUrl = \"/\"\r\n} else if (ENV === \"production\") {\r\n    publicUrl = \"/potato-demo-test\"\r\n}\r\n\r\nconst history = createBrowserHistory({\r\n    basename: publicUrl\r\n});\r\n\r\nexport default history;","import axios from \"axios\"\r\nimport history from './history'\r\n\r\nconst appID = '7wfWsfscoq44dWM2dCcQmdV8';\r\nconst appSecret = 'x8jE2TC8GmbbZ7Hwb8W6vNGw';\r\nlet n = 0;\r\nconst instance = axios.create({\r\n    baseURL: 'https://gp-server.hunger-valley.com/',\r\n    //timeout: 1000,\r\n    headers: {\r\n        't-app-id': appID,\r\n        't-app-secret': appSecret\r\n    }\r\n});\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(function (config) {\r\n    const xToken = localStorage.getItem('x-token')\r\n\r\n    if (xToken) {\r\n        config.headers['Authorization'] = `Bears ${xToken}`\r\n    }\r\n    return config;\r\n}, function (error) {\r\n    return Promise.reject(error);\r\n});\r\n\r\n// Add a response interceptor\r\ninstance.interceptors.response.use(function (response) {\r\n    if (response.headers['x-token']) {\r\n        localStorage.setItem('x-token', response.headers['x-token'])\r\n        localStorage.setItem(\"count\", n.toString())\r\n        if (!n) {\r\n            n = 1\r\n        } else {\r\n            n += 1\r\n        }\r\n    }\r\n    if (!localStorage.getItem(\"timer\")) {\r\n        localStorage.setItem(\"timer\", \"25\")\r\n    }\r\n    return response;\r\n}, function (error) {\r\n    if (error.response === undefined || error.response.status === 401) {\r\n        if (history.location.pathname === '/') {\r\n            history.push('/login')\r\n        }\r\n    }\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport default instance;","import React from 'react'\r\nimport './CountDown.scss'\r\n\r\ninterface ICountDownProps {\r\n  timer: number;\r\n  duration: number;\r\n  onFinish: () => void;\r\n}\r\n\r\ninterface IICountDownState {\r\n  countDown: number;\r\n}\r\n\r\nlet timerId: NodeJS.Timeout\r\n\r\nclass CountDown extends React.Component<ICountDownProps, IICountDownState> {\r\n  constructor(props: ICountDownProps) {\r\n    super(props)\r\n    this.state = {\r\n      countDown: this.props.timer\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    timerId = setInterval(() => {\r\n      const time = this.state.countDown\r\n      this.setState({ countDown: time - 1000 })\r\n      document.title = `${this.countDown} - 番茄土豆`\r\n      if (time < 1000) {\r\n        document.title = \"番茄土豆\"\r\n        this.props.onFinish()\r\n        clearInterval(timerId)\r\n      }\r\n    }, 1000)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(timerId)\r\n  }\r\n\r\n  get countDown() {\r\n    const min = Math.floor(this.state.countDown / 1000 / 60);\r\n    const second = Math.floor(((this.state.countDown / 1000) % 60) + 21);\r\n    return `${min < 10 ? `0${min}` : min}:${second < 10 ? `0${second}` : second}`\r\n  }\r\n\r\n  render() {\r\n    let percent = 1 - (this.state.countDown / this.props.duration)\r\n    return (\r\n      <div className=\"CountDown\">\r\n        <span className=\"restTime\">{this.countDown}</span>\r\n        <div className=\"progress\" style={{width: `${percent * 100}%`}}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CountDown","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Input, Icon, Tooltip, Button } from 'antd';\r\nimport './SignUp.scss'\r\nimport axios from '../../config/axios'\r\n\r\ninterface ISignUpState {\r\n  account: string,\r\n  password: string,\r\n  passwordConformation: string\r\n}\r\n\r\nclass SignUp extends React.Component<any, ISignUpState> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {\r\n      account: '',\r\n      password: '',\r\n      passwordConformation: ''\r\n    }\r\n    console.log(this.props); //是一个对象，包含history，location，match\r\n  }\r\n\r\n  onChange = (key: keyof ISignUpState, value: string) => {\r\n    const newState: any = {}\r\n    newState[key] = value\r\n    this.setState(newState)\r\n  }\r\n\r\n  submit = async () => {\r\n    const { account, password, passwordConformation } = this.state;\r\n    try {\r\n      const response = await axios.post('sign_up/user', {\r\n        account,\r\n        password,\r\n        password_confirmation: passwordConformation\r\n      });\r\n      this.props.history.push('/')\r\n      console.log(response);\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { account, password, passwordConformation } = this.state;\r\n    return (\r\n      <div className='SignUp'>\r\n        <h1>番茄土豆闹钟注册</h1>\r\n        <Input placeholder=\"请输入用户名\"\r\n          value={account}\r\n          prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n          suffix={\r\n            <Tooltip title=\"Extra information\">\r\n              <Icon type=\"info-circle\" style={{ color: 'rgba(0,0,0,.45)' }} />\r\n            </Tooltip>\r\n          }\r\n          allowClear\r\n          onChange={(e) => this.onChange(\"account\", e.target.value)}\r\n        />\r\n        <Input.Password placeholder=\"请输入密码\"\r\n          value={password}\r\n          onChange={(e) => this.onChange(\"password\", e.target.value)}\r\n        />\r\n        <Input.Password placeholder=\"请确认密码\"\r\n          value={passwordConformation}\r\n          onChange={(e) => this.onChange(\"passwordConformation\", e.target.value)}\r\n        />\r\n        <Button className=\"SignUpButton\"\r\n          type=\"primary\"\r\n          block\r\n          onClick={this.submit.bind(this)}>注册</Button>\r\n        <p>\r\n          如果你有账号，请立即<Link to='/login'>登录</Link>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SignUp;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Input, Icon, Button } from 'antd';\r\nimport './Login.scss'\r\nimport axios from '../../config/axios'\r\n\r\ninterface ILoginState {\r\n  account: string,\r\n  password: string,\r\n}\r\n\r\nclass Login extends React.Component<any, ILoginState> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {\r\n      account: '',\r\n      password: '',\r\n    }\r\n    console.log(this.props); //是一个对象，包含history，location，match\r\n  }\r\n\r\n  onChange = (key: keyof ILoginState, value: string) => {\r\n    const newState: any = {}\r\n    newState[key] = value\r\n    this.setState(newState)\r\n  }\r\n\r\n  submit = async () => {\r\n    const { account, password } = this.state;\r\n    try {\r\n      const response = await axios.post('sign_in/user', {\r\n        account,\r\n        password\r\n      });\r\n      console.log(response);\r\n      this.props.history.push('/')\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { account, password } = this.state;\r\n    return (\r\n      <div className='Login'>\r\n        <h1>番茄土豆闹钟登录</h1>\r\n        <Input placeholder=\"请输入用户名\"\r\n          value={account}\r\n          prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n          allowClear\r\n          onChange={(e) => this.onChange(\"account\", e.target.value)}\r\n        />\r\n        <Input.Password placeholder=\"请输入密码\"\r\n          value={password}\r\n          onChange={(e) => this.onChange(\"password\", e.target.value)}\r\n        />\r\n        <Button className=\"LoginButton\"\r\n          type=\"primary\"\r\n          block\r\n          onClick={this.submit.bind(this)}>登录</Button>\r\n        <p>\r\n          没有账号？请立即<Link to='/signup'>注册</Link>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login;","import { ADD_TODO, INIT_TODOS, UPDATE_TODO, EDIT_TODO } from '../actionTypes'\r\n\r\nexport const addTodo = (payload: any) => {\r\n  return ({\r\n    type: ADD_TODO,\r\n    payload\r\n  })\r\n}\r\nexport const initTodos = (payload: any[]) => {\r\n  return ({\r\n    type: INIT_TODOS,\r\n    payload\r\n  })\r\n}\r\n\r\nexport const updateTodo = (payload: any) => {\r\n  return ({\r\n    type: UPDATE_TODO,\r\n    payload\r\n  })\r\n}\r\n\r\nexport const editTodo = (payload: number) => {\r\n  return ({\r\n    type: EDIT_TODO,\r\n    payload\r\n  })\r\n}","export const ADD_TODO = \"ADD_TODO\"\r\nexport const INIT_TODOS = \"INIT_TODOS\"\r\nexport const UPDATE_TODO = \"UPDATE_TODO\"\r\nexport const EDIT_TODO = \"EDIT_TODO\"\r\n\r\nexport const ADD_TOMATO = \"ADD_TOMATO\"\r\nexport const INIT_TOMATOES = \"INIT_TOMATOES\"\r\nexport const UPDATE_TOMATO = \"UPDATE_TOMATO\"\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Input, Icon } from 'antd';\r\nimport axios from '../../config/axios'\r\nimport { addTodo } from '../../redux/actions/todos'\r\nimport './TodoInput.scss'\r\n\r\ninterface ITodoInputProps {\r\n  addTodo: (playload: any) => any;\r\n}\r\n\r\ninterface ITodoInputState {\r\n  description: string;\r\n}\r\n\r\nclass TodoInput extends React.Component<ITodoInputProps, ITodoInputState> {\r\n  constructor(props: ITodoInputProps) {\r\n    super(props)\r\n    this.state = {\r\n      description: ''\r\n    }\r\n    console.log(this.props) //{addTodo: ƒ}\r\n  }\r\n\r\n  addTodo = () => {\r\n    if (this.state.description !== '') {\r\n      this.postTodo()\r\n    }\r\n  }\r\n\r\n  postTodo = async () => {\r\n    try {\r\n      const response = await axios.post('todos', {\r\n        description: this.state.description\r\n      })\r\n      console.log(response)\r\n      this.props.addTodo(response.data.resource)\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    }\r\n    this.setState({ description: '' })\r\n  }\r\n\r\n  render() {\r\n    const { description } = this.state\r\n    const suffix = description ? <Icon type=\"enter\" onClick={this.postTodo} /> : <span />;\r\n    return (\r\n      <div className=\"TodoInput\">\r\n        <Input placeholder=\"添加新任务\"\r\n          className=\"input\"\r\n          value={description}\r\n          onPressEnter={this.addTodo}\r\n          onChange={(e) => this.setState({ description: e.target.value })}\r\n          suffix={suffix} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  ...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  addTodo\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput);","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {updateTodo, editTodo} from '../../redux/actions/todos'\r\nimport classNames from 'classnames'\r\nimport axios from '../../config/axios'\r\nimport {Checkbox, Icon} from 'antd';\r\nimport './TodoItem.scss'\r\n\r\ninterface ITodoItemProps {\r\n    id: number;\r\n    description: string;\r\n    completed: boolean;\r\n    editing: boolean;\r\n    updateTodo: (payload: any) => any;\r\n    editTodo: (id: number) => any;\r\n}\r\n\r\ninterface ITodoItemState {\r\n    editText: string;\r\n}\r\n\r\nclass TodoItem extends React.Component<ITodoItemProps, ITodoItemState> {\r\n    constructor(props: ITodoItemProps) {\r\n        super(props)\r\n        this.state = {\r\n            editText: this.props.description\r\n        }\r\n    }\r\n\r\n    updateTodo = async (params: any) => {\r\n        try {\r\n            const response = await axios.put(`todos/${this.props.id}`, params)\r\n            this.props.updateTodo(response.data.resource)\r\n        } catch (e) {\r\n            throw new Error(e)\r\n        }\r\n    }\r\n\r\n    editTodo = () => {\r\n        this.props.editTodo(this.props.id)\r\n    }\r\n\r\n    onKeyUp = (e: any) => {\r\n        if (e.keyCode === 13 && this.state.editText !== '') {\r\n            this.updateTodo({description: this.state.editText})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const Editing = (\r\n            <div className=\"editing\">\r\n                <input type=\"text\"\r\n                       value={this.state.editText}\r\n                       onChange={e => this.setState({editText: e.target.value})}\r\n                       onKeyUp={this.onKeyUp}\r\n                />\r\n                <div className=\"iconWrapper\">\r\n                    <Icon type=\"enter\" onClick={e => this.updateTodo({description: this.state.editText})}/>\r\n                    <Icon type=\"delete\" onClick={e => this.updateTodo({deleted: true})}/>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n        const Text = <span className=\"text\" onDoubleClick={this.editTodo}>{this.props.description}</span>\r\n\r\n        const todoItemClass = classNames({\r\n            TodoItem: true,\r\n            editing: this.props.editing,\r\n            completed: this.props.completed\r\n        })\r\n        return (\r\n            <div className={todoItemClass} id=\"TodoItem\">\r\n                <Checkbox\r\n                    className=\"checkbox\"\r\n                    checked={this.props.completed}\r\n                    onChange={e => this.updateTodo({completed: e.target.checked})}/>\r\n                {this.props.editing ? Editing : Text}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n    ...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    updateTodo,\r\n    editTodo\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItem)\r\n","import {Icon, Tree} from \"antd\"\r\nimport React from 'react';\r\nimport axios from '../../config/axios'\r\nimport {connect} from 'react-redux'\r\nimport TodoInput from './TodoInput'\r\nimport TodoItem from './TodoItem'\r\nimport {editTodo, updateTodo} from '../../redux/actions/todos'\r\nimport './Todos.scss'\r\n\r\nconst {TreeNode} = Tree;\r\n\r\nclass Todos extends React.Component<any> {\r\n    constructor(props: any) {\r\n        super(props)\r\n        console.log(props)  //props 是 {todos: [], function initTodos(), function updateTodo()}\r\n    }\r\n\r\n    get unDeletedTodos() {\r\n        return this.props.todos.filter((t: any) => !t.deleted)\r\n    }\r\n\r\n    get unCompletedTodos() {\r\n        return this.unDeletedTodos.filter((t: any) => !t.completed)\r\n    }\r\n\r\n    get completedTodos() {\r\n        return this.unDeletedTodos.filter((t: any) => t.completed)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Todos\">\r\n                <TodoInput/>\r\n                <div className=\"todoLists\">\r\n                    {\r\n                        this.unCompletedTodos.map((t: any) =>\r\n                            <TodoItem key={t.id} {...t} update={this.postTodo}\r\n                                      editTodo={this.isTodoEditable}/>\r\n                        )\r\n                    }\r\n                    <Tree\r\n                        showLine\r\n                        switcherIcon={<Icon type=\"down\"/>}\r\n                    >\r\n                        <TreeNode title=\"最近完成的任务\" key=\"0-0-0-2\">\r\n                            {\r\n                                this.completedTodos.map((t: any) => {\r\n                                        return (\r\n                                            <TreeNode key={`tree-${t.id}`} title={\r\n                                                <TodoItem\r\n                                                    key={t.id}\r\n                                                    {...t}\r\n                                                    update={this.postTodo}\r\n                                                    editTodo={this.isTodoEditable}\r\n                                                />\r\n                                            }/>\r\n                                        )\r\n                                    }\r\n                                )\r\n                            }\r\n                        </TreeNode>\r\n                    </Tree>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    isTodoEditable = (id: number) => {\r\n        this.props.editTodo(id)\r\n    }\r\n\r\n    postTodo = async (id: number, params: any) => {\r\n        if (params.completed) {\r\n            params.completed_at = new Date()\r\n        }\r\n        try {\r\n            const response = await axios.put(`todos/${id}`, params)\r\n            this.props.updateTodo(response.data.resource)\r\n        } catch (e) {\r\n            throw new Error(e)\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n    todos: state.todos,\r\n    ...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    editTodo,\r\n    updateTodo\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);","import React from 'react';\r\nimport axios from '../../config/axios'\r\nimport { Button, Input, Icon, Modal } from 'antd'\r\nimport CountDown from './CountDown'\r\nimport './TomatoAction.scss'\r\n\r\ninterface ITomatoActionProps {\r\n  startTomato: () => void;\r\n  updateTomato: (payload: any) => any;\r\n  unfishedTomato: any;\r\n}\r\n\r\ninterface ITomatoActionState {\r\n  description: string;\r\n}\r\n\r\nconst { confirm } = Modal;\r\n\r\nclass TomatoAction extends React.Component<ITomatoActionProps, ITomatoActionState> {\r\n  constructor(props: ITomatoActionProps) {\r\n    super(props)\r\n    this.state = {\r\n      description: ''\r\n    };\r\n  }\r\n\r\n  abortTomato = () => {\r\n    this.updateTomato({\r\n      aborted: true\r\n    });\r\n    document.title = \"番茄土豆\"\r\n  }\r\n\r\n  showConfirm = () => {\r\n    confirm({\r\n      title: '您目前正在一个番茄工作时间中，要放弃这个番茄吗？',\r\n      onOk: () => {\r\n        this.abortTomato()\r\n      },\r\n      onCancel() {\r\n        console.log('取消');\r\n      },\r\n      cancelText: \"取消\",\r\n      okText: \"确定\"\r\n    });\r\n  }\r\n\r\n  onFinish = () => {\r\n    this.forceUpdate()\r\n  }\r\n\r\n  onPressEnter = () => {\r\n    if (this.state.description !== '') {\r\n      this.updateTomato({\r\n        description: this.state.description,\r\n        ended_at: new Date()\r\n      })\r\n      this.setState({ description: '' })\r\n    }\r\n  }\r\n\r\n  updateTomato = async (params: any) => {\r\n    try {\r\n      const response = await axios.put(`tomatoes/${this.props.unfishedTomato.id}`, params)\r\n      this.props.updateTomato(response.data.resource)\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    let html = <div />\r\n    if (this.props.unfishedTomato === undefined) {\r\n      html = <Button className=\"startTomatoButton\"\r\n        onClick={() => { this.props.startTomato() }}>开始番茄</Button>\r\n    } else {\r\n      const startTime = Date.parse(this.props.unfishedTomato.started_at)\r\n      const duration = this.props.unfishedTomato.duration\r\n      const timeNow = new Date().getTime()\r\n      if (timeNow - startTime > duration) {\r\n        html = (\r\n          <div className=\"inputWrapper\">\r\n            <Input\r\n              className=\"input\"\r\n              value={this.state.description}\r\n              placeholder=\"你刚刚完成了什么工作?\"\r\n              onChange={e => this.setState({ description: e.target.value })}\r\n              onPressEnter={this.onPressEnter}\r\n            />\r\n            <Icon type=\"close-circle\" className=\"abort\" onClick={this.showConfirm} />\r\n          </div>\r\n        )\r\n      } else if (timeNow - startTime < duration) {\r\n        const timer = duration - timeNow + startTime\r\n        html = (\r\n          <div className=\"countDownWrapper\">\r\n            <CountDown timer={timer} duration={duration} onFinish={this.onFinish} />\r\n            <Icon type=\"close-circle\" className=\"abort\" onClick={this.showConfirm} />\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"TomatoAction\" >\r\n        {html}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TomatoAction\r\n","import React from 'react';\r\nimport {format} from 'date-fns';\r\nimport { Icon, Spin } from \"antd\"\r\nimport './TomatoList.scss'\r\n\r\ninterface ITomatoListProps {\r\n    finishedTomatoes: any;\r\n}\r\n\r\ninterface ITomatoListState {\r\n    spinning: boolean\r\n}\r\n\r\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin/>;\r\n\r\nconst TomatoItem = (props: any) => {\r\n    return (\r\n        <div className=\"TomatoItem\">\r\n            <span\r\n                className=\"timeRange\">{format(Date.parse(props.started_at), 'H:mm')} - {format(Date.parse(props.ended_at), 'H:mm')}</span>\r\n            <span className=\"description\">{props.description}</span>\r\n        </div>\r\n    )\r\n};\r\n\r\nclass TomatoList extends React.Component<ITomatoListProps, ITomatoListState> {\r\n    constructor(props: ITomatoListProps) {\r\n        super(props);\r\n        this.state = {\r\n            spinning: true\r\n        }\r\n    }\r\n\r\n    get dates() {\r\n        const dates = Object.keys(this.props.finishedTomatoes);  //获取键名\r\n        return dates.sort((a, b) => Date.parse(b) - Date.parse(a)).splice(0, 3)\r\n    }\r\n\r\n    public componentDidMount(): void {\r\n        this.setState({ spinning: false })\r\n    }\r\n\r\n    render() {\r\n        const list = this.dates.map((d: any) => {\r\n            const tomatoes = this.props.finishedTomatoes[d];\r\n            return (\r\n                <div key={d} className=\"dailyTomatoes\">\r\n                    <div className=\"title\">\r\n                        <span className=\"dateTime\">{format(Date.parse(d), 'M月dd日')}</span>\r\n                        <span className=\"finishedCount\">完成了 {tomatoes.length} 个番茄</span>\r\n                    </div>\r\n                    {\r\n                        tomatoes.map((t: any) => <TomatoItem key={t.id} {...t} />)\r\n                    }\r\n                </div>\r\n            )\r\n        });\r\n        return (\r\n            <div className=\"TomatoList\">\r\n                <Spin indicator={antIcon} spinning={this.state.spinning}/>\r\n                {list}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TomatoList;","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {addTomato, updateTomato} from '../../redux/actions/tomatoes'\r\nimport './Tomatoes.scss'\r\nimport TomatoAction from './TomatoAction'\r\nimport TomatoList from './TomatoList'\r\nimport axios from '../../config/axios'\r\nimport _ from 'lodash'\r\nimport {format, parseISO} from 'date-fns'\r\n\r\ninterface ITomatoesProps {\r\n  tomatoes: any[];\r\n  addTomato: (payload: any) => any;\r\n  updateTomato: (payload: any) => any;\r\n  timer: number;\r\n}\r\n\r\nclass Tomatoes extends React.Component<ITomatoesProps> {\r\n  constructor(props: ITomatoesProps) {\r\n    super(props);\r\n  }\r\n\r\n  get unfinishedTomato() {\r\n    return this.props.tomatoes.filter((t: any) => !t.description && !t.ended_at && !t.aborted)[0]\r\n  }\r\n\r\n  get finishedTomatoes() {\r\n    const finishedTomatoes = this.props.tomatoes.filter((t: any) => t.description && t.ended_at && !t.aborted)\r\n    return _.groupBy(finishedTomatoes, (tomato) => {\r\n\r\n      return format(parseISO(tomato.started_at), 'yyyy-MM-d')\r\n    })\r\n  }\r\n\r\n  startTomato = async (timer: number) => {\r\n    try {\r\n      const response = await axios.post('tomatoes', { duration: (timer * 60 * 1000) });\r\n      this.props.addTomato(response.data.resource)\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  };\r\n\r\n  public componentDidMount(): void {\r\n    this.setState({ spinning: false })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Tomatoes\">\r\n        <TomatoAction\r\n          startTomato={() => {this.startTomato(this.props.timer)}}\r\n          unfishedTomato={this.unfinishedTomato}\r\n          updateTomato={this.props.updateTomato}\r\n        />\r\n        <TomatoList finishedTomatoes={this.finishedTomatoes} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  tomatoes: state.tomatoes,\r\n  ...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  addTomato,\r\n  updateTomato\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tomatoes)\r\n\r\n\r\n","import { ADD_TOMATO, INIT_TOMATOES,UPDATE_TOMATO } from '../actionTypes'\r\n\r\nexport const addTomato = (payload: any) => {\r\n  return ({\r\n    type: ADD_TOMATO,\r\n    payload\r\n  })\r\n}\r\n\r\nexport const initTomatoes = (payload: any[]) => {\r\n  return ({\r\n    type: INIT_TOMATOES,\r\n    payload\r\n  })\r\n}\r\n\r\nexport const updateTomato = (payload: any) => {\r\n  return ({\r\n    type: UPDATE_TOMATO,\r\n    payload\r\n  })\r\n}\r\n","import React from 'react'\r\n\r\ninterface IPolygonProps {\r\n    totalFinishedCount: number;\r\n    data: any;\r\n}\r\n\r\nclass Polygon extends React.Component<IPolygonProps> {\r\n    constructor(props: IPolygonProps) {\r\n        super(props)\r\n    }\r\n\r\n    points = () => {\r\n        const dates = Object.keys(this.props.data).sort((a, b) => Date.parse(a) - Date.parse(b));\r\n        const firstDay = dates[0];\r\n        if (firstDay) {\r\n            const range = new Date().getTime() - Date.parse(firstDay);\r\n            let finishedCount = 0;\r\n            let finishedY = null;\r\n            const pointsArr = dates.map(date => {\r\n                const x = (Date.parse(date) - Date.parse(firstDay)) / range * 240;\r\n                finishedCount += this.props.data[date].length;\r\n                const y = (1 - (finishedCount / this.props.totalFinishedCount)) * 60;\r\n                finishedY = y;\r\n                return `${x}, ${y}`\r\n            });\r\n            return [\"0,60\", ...pointsArr, `240,${finishedY}`, `240, 60`].join(\" \")\r\n        } else {\r\n            return \"0,60 240,60\"\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Polygon\">\r\n                <svg width=\"100%\" height=\"60\" preserveAspectRatio=\"none\">\r\n                    <polygon fill=\"rgba(215,78,78,0.1)\" points={this.points()}/>\r\n                    <polyline fill=\"none\" stroke=\"rgba(215,78,78,0.5)\"\r\n                              strokeWidth=\"1\" points={this.points()} strokeLinecap=\"square\"/>\r\n                </svg>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Polygon;","import React from 'react'\r\nimport axios from '../../../config/axios'\r\nimport dayjs from 'dayjs'\r\nimport { connect } from 'react-redux';\r\nimport { updateTodo } from \"../../../redux/actions/todos\";\r\nimport \"./TodoHistoryTodoItem.scss\";\r\n\r\ninterface ITodoHistoryTodoItemProps {\r\n  todo: any;\r\n  itemType: string;\r\n  updateTodo: (payload: any) => any;\r\n}\r\n\r\nclass TodoHistoryTodoItem extends React.Component<ITodoHistoryTodoItemProps> {\r\n  constructor(props: ITodoHistoryTodoItemProps) {\r\n    super(props)\r\n  }\r\n\r\n  updateTodo = async (params: any) => {\r\n    try {\r\n      const response = await axios.put(`todos/${this.props.todo.id}`, params)\r\n      console.log(response)\r\n      this.props.updateTodo(response.data.resource)\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let formatText\r\n    let time\r\n    let action\r\n    if (this.props.itemType === 'finished') {\r\n      formatText = 'HH:mm'\r\n      time = this.props.todo.updated_at\r\n      action = (\r\n        <div className=\"action\">\r\n          <span onClick={() => this.updateTodo({ completed: false, updated_at: null })}>恢复</span>\r\n          <span onClick={() => this.updateTodo({ deleted: true })}>删除</span>\r\n        </div>\r\n      )\r\n    } else if (this.props.itemType === 'deleted') {\r\n      formatText = 'YYYY年MM月DD日 HH:mm'\r\n      time = this.props.todo.created_at\r\n      action = (\r\n        <div className=\"action\">\r\n          <span onClick={() => this.updateTodo({ deleted: false })}>恢复</span>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"TodoHistoryTodoItem\">\r\n        <div className=\"text\">\r\n          <span className=\"time\">{dayjs(time).format(formatText)}</span>\r\n          <span className=\"description\">{this.props.todo.description}</span>\r\n        </div>\r\n        {action}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n  ...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  updateTodo\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoHistoryTodoItem);","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Tabs} from 'antd'\r\nimport dayjs from 'dayjs'\r\nimport _ from 'lodash'\r\nimport {format, parseISO} from 'date-fns'\r\nimport TodoHistoryTodoItem from './TodoHistoryTodoItem'\r\nimport \"./TodoHistory.scss\"\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\ninterface ITodoHistoryProps {\r\n    todos: any[];\r\n}\r\n\r\nclass TodoHistory extends React.Component<ITodoHistoryProps> {\r\n    constructor(props: ITodoHistoryProps) {\r\n        super(props)\r\n    }\r\n\r\n    get finishedTodos() {\r\n        return this.props.todos.filter(t => t.completed && !t.deleted)\r\n    }\r\n\r\n    get deletedTodos() {\r\n        return this.props.todos.filter(t => t.deleted)\r\n    }\r\n\r\n    get dailyTodos() {\r\n        return _.groupBy(this.finishedTodos, (todos) => {\r\n            return format(parseISO(todos.updated_at), 'yyyy-MM-dd')\r\n        })\r\n    }\r\n\r\n    get finishedDates() {\r\n        return Object.keys(this.dailyTodos).sort((a, b) => Date.parse(b) - Date.parse(a))\r\n    }\r\n\r\n    get finishedTodoList() {\r\n        const week = ['周日', '周一', '周二', '周三', '周四', '周五', '周六'];\r\n        return this.finishedDates.map((date: any) => {\r\n            return (\r\n                <div className=\"dailyTodos\" key={date}>\r\n                    <div className=\"summary\">\r\n                        <p className=\"date\">\r\n                            <span className=\"dateTime\">{dayjs(date).format('YYYY年M月D日')}</span>\r\n                            <span className=\"week\">{week[(parseInt(dayjs(date).format('d')))]}</span>\r\n                        </p>\r\n                        <p className=\"finishedCount\">完成了{this.dailyTodos[date].length}个任务</p>\r\n                    </div>\r\n                    <div className=\"todoList\">\r\n                        {\r\n                            this.dailyTodos[date].map(todo =>\r\n                                <TodoHistoryTodoItem key={todo.id} todo={todo} itemType=\"finished\"/>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const deletedTodoList = this.deletedTodos.map(todo => {\r\n            return (\r\n                <div className=\"dailyDelete\" key={todo.id}>\r\n                    <TodoHistoryTodoItem key={todo.id} todo={todo} itemType=\"deleted\"/>\r\n                </div>\r\n            )\r\n        });\r\n        return (\r\n            <div className=\"TodoHistory\">\r\n                <Tabs defaultActiveKey=\"1\" type=\"card\">\r\n                    <TabPane tab=\"已完成的任务\" key=\"1\">\r\n                        <div className=\"TodoHistory\" id=\"TodoHistory\">\r\n                            {this.finishedTodoList}\r\n                        </div>\r\n                    </TabPane>\r\n                    <TabPane tab=\"已删除的任务\" key=\"2\">\r\n                        <div className=\"TodoHistory\" id=\"TodoHistory\">\r\n                            {deletedTodoList}\r\n                        </div>\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n    todos: state.todos,\r\n    ...ownProps\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(TodoHistory)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Polygon from './Polygon'\r\nimport TodoHistory from './TodoHistory/TodoHistory'\r\nimport _ from 'lodash'\r\nimport {format} from 'date-fns'\r\nimport './Statistics.scss'\r\n\r\ninterface IStatisticsProps {\r\n    todos: any[];\r\n    tomatoes: any;\r\n}\r\n\r\n\r\nclass Statistics extends React.Component<IStatisticsProps> {\r\n    constructor(props: IStatisticsProps) {\r\n        super(props);\r\n    }\r\n\r\n    get finishedTodos() {\r\n        return this.props.todos.filter(t => t.completed && !t.deleted)\r\n    }\r\n\r\n    get finishedTomatoes() {\r\n        return this.props.tomatoes.filter((t: any) => t.ended_at && t.description && !t.aborted)\r\n    }\r\n\r\n    get dailyTodos() {\r\n        return _.groupBy(this.finishedTodos, (todos) => {\r\n            return format(Date.parse(todos.updated_at), \"yyyy-MM-dd\")\r\n        })\r\n    }\r\n\r\n    get dailyTomatoes() {\r\n        return _.groupBy(this.finishedTomatoes, (tomatoes) => {\r\n            return format(Date.parse(tomatoes.ended_at), 'yyyy-MM-dd')\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Statistics\">\r\n                <ul className=\"graph\">\r\n                    <li>\r\n                        <div className=\"desc\">\r\n                            <span className=\"title\">番茄历史</span>\r\n                            <span className=\"subtitle\">累计完成番茄</span>\r\n                            <span className=\"quantity\">{this.finishedTomatoes.length}</span>\r\n                        </div>\r\n                        <Polygon data={this.dailyTomatoes} totalFinishedCount={this.finishedTomatoes.length}/>\r\n                    </li>\r\n                    <li>\r\n                        <div className=\"desc\">\r\n                            <span className=\"title\">任务历史</span>\r\n                            <span className=\"subtitle\">累计完成任务</span>\r\n                            <span className=\"quantity\">{this.finishedTodos.length}</span>\r\n                        </div>\r\n                        <Polygon data={this.dailyTodos} totalFinishedCount={this.finishedTodos.length}/>\r\n                    </li>\r\n                </ul>\r\n                <TodoHistory/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n    return {\r\n        todos: state.todos,\r\n        tomatoes: state.tomatoes,\r\n        ...ownProps\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Statistics);","import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport axios from '../../config/axios'\r\nimport {Dropdown, Icon, InputNumber, Menu, Modal, notification} from 'antd';\r\nimport history from '../../config/history'\r\nimport './Home.scss'\r\nimport Todos from '../Todos/Todos'\r\nimport Tomatoes from '../Tomatoes/Tomatoes'\r\nimport Statistics from '../Statistics/Statistics'\r\nimport {initTodos} from '../../redux/actions/todos'\r\nimport {initTomatoes} from '../../redux/actions/tomatoes'\r\n\r\ninterface IIndexState {\r\n    user: any,\r\n    visible: boolean,\r\n    timer: number | undefined\r\n}\r\n\r\nconst Tomato = Icon.createFromIconfontCN({\r\n    scriptUrl: \"//at.alicdn.com/t/font_808628_b6nuh19mmf5.js\",\r\n})\r\n\r\nconst openNotification = () => {\r\n    notification.open({\r\n        message: '使用小提示',\r\n        description:\r\n            '按下回车键即可添加新的todo噢',\r\n        onClick: () => {\r\n            console.log('Notification Clicked!');\r\n        },\r\n    });\r\n};\r\n\r\nconst openNotification1 = () => {\r\n    notification.open({\r\n        message: '使用小提示',\r\n        description:\r\n            '番茄时间结束后输入你刚才完成的事情',\r\n        onClick: () => {\r\n            console.log('Notification Clicked!');\r\n        },\r\n    });\r\n};\r\n\r\nconst openNotification2 = () => {\r\n    notification.open({\r\n        message: '使用小提示',\r\n        description:\r\n            '双击todo列表可以编辑噢~',\r\n        onClick: () => {\r\n            console.log('Notification Clicked!');\r\n        },\r\n    });\r\n};\r\n\r\nclass Home extends React.Component<any, IIndexState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            user: {},\r\n            visible: false,\r\n            timer: parseInt(localStorage.getItem(\"timer\") as string)\r\n        };\r\n    }\r\n\r\n    public componentDidMount(): void {\r\n        let count = Number(localStorage.getItem(\"count\"));\r\n        if (count === 1) {\r\n            openNotification2()\r\n        }\r\n    }\r\n\r\n    async componentWillMount() {\r\n        await this.getMe();\r\n        await this.getTodos();\r\n        await this.getTomatoes()\r\n    }\r\n\r\n    getMe = async () => {\r\n        const response = await axios.get('me');\r\n        this.setState({\r\n            ...this.state,\r\n            user: response.data\r\n        })\r\n    };\r\n    getTodos = async () => {\r\n        try {\r\n            const response = await axios.get('todos') //response 是对象，包括 data: {resources: Array(1)}\r\n            const todos = response.data.resources.map((t: any) => ({\r\n                ...t, ...{editing: false}\r\n            })); //todos 是待办事项列表\r\n            this.props.initTodos(todos) //返回的是{type: \"INIT_TODOS\", payload: Array(1)}\r\n        } catch (error) {\r\n            throw new Error(error)\r\n        }\r\n    };\r\n\r\n    getTomatoes = async () => {\r\n        try {\r\n            const response = await axios.get('tomatoes');\r\n            const tomatoes = response.data.resources;\r\n            this.props.initTomatoes(tomatoes)\r\n        } catch (error) {\r\n            throw new Error(error)\r\n        }\r\n    };\r\n\r\n\r\n    logout = () => {\r\n        localStorage.setItem('x-token', '');\r\n        history.push('/login')\r\n    };\r\n\r\n    handleOk = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            visible: false\r\n        });\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            visible: false\r\n        });\r\n    };\r\n    showModal = () => {\r\n        this.setState({\r\n            ...this.state,\r\n            visible: true,\r\n        });\r\n    };\r\n    onInputValChange = (val: number | undefined) => {\r\n        localStorage.setItem(\"timer\", val!.toString());\r\n        this.setState({\r\n            ...this.state,\r\n            timer: val\r\n        })\r\n        console.log(\"timer: \",this.state.timer)\r\n    };\r\n\r\n    render() {\r\n        const menu = (\r\n            <Menu className=\"menu\">\r\n                <Menu.Item key=\"0\">\r\n                    <span onClick={() => {\r\n                        this.showModal()\r\n                    }}>偏好设置&nbsp;<Icon type=\"setting\"/></span>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"1\" onClick={this.logout.bind(this)}>\r\n                    <span>退出登录&nbsp;<Icon type=\"logout\"/></span>\r\n                </Menu.Item>\r\n            </Menu>\r\n        );\r\n        return (\r\n            <div className=\"Home\">\r\n                <Modal\r\n                    title=\"设置一个番茄的时间\"\r\n                    visible={this.state.visible}\r\n                    onOk={() => {this.handleOk()}}\r\n                    onCancel={() => {this.handleCancel()}}\r\n                >\r\n                    <InputNumber min={1} max={100} defaultValue={parseInt(localStorage.getItem(\"timer\") as string)}\r\n                                 onChange={(e) => {this.onInputValChange(e)}}/> 分钟\r\n                </Modal>\r\n                <header>\r\n                    <span className=\"logo\">\r\n                        <Tomato type={\"i-Tomato\"} className={\"icon\"} style={{fontSize: 32}}/>\r\n                        <span className={\"logoName\"}>番茄土豆闹钟</span>\r\n                    </span>\r\n                    <Dropdown className=\"dropdown\" overlay={menu}  placement=\"bottomRight\">\r\n                        <span onClick={e => e.preventDefault()}>\r\n                            你好，{this.state.user.account} <Icon type=\"down\"/>\r\n                        </span>\r\n                    </Dropdown>\r\n                </header>\r\n                <main>\r\n                    <Tomatoes timer={this.state.timer}/>\r\n                    <Todos/>\r\n                </main>\r\n                <Statistics/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => ({\r\n    ...ownProps\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    initTodos,\r\n    initTomatoes\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import React from 'react';\r\nimport './App.css';\r\nimport {BackTop} from \"antd\"\r\nimport SignUp from './components/SignUp/SignUp'\r\nimport Login from './components/Login/Login'\r\nimport Home from './components/Home/Home'\r\nimport {Router, Route} from \"react-router-dom\";\r\nimport history from './config/history'\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n            <Router history={history}>\r\n                <div>\r\n                    <BackTop/>\r\n                    <Route exact path='/' component={Home}/>\r\n                    <Route exact path='/login' component={Login}/>\r\n                    <Route exact path='/signUp' component={SignUp}/>\r\n                </div>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n            window.location.href\r\n        );\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        }).catch(error => {\r\n            console.error(error.message);\r\n        });\r\n    }\r\n}\r\n","import { ADD_TODO, INIT_TODOS, UPDATE_TODO, EDIT_TODO } from '../actionTypes'\r\n\r\nconst todos = (state: any[] = [], action: any) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [...state, action.payload]\r\n    case INIT_TODOS:\r\n      return [...action.payload]\r\n    case UPDATE_TODO:\r\n      return state.map((t) => {\r\n        if (t.id === action.payload.id) {\r\n          return action.payload\r\n        } else {\r\n          return t\r\n        }\r\n      });\r\n    case EDIT_TODO:\r\n      return state.map((t) => {\r\n        if (t.id === action.payload) {\r\n          return { ...t, ...{ editing: true } }\r\n        } else {\r\n          return { ...t, ...{ editing: false } }\r\n        }\r\n      });\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default todos;","import { ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO } from '../actionTypes'\r\n\r\nconst tomatoes = (state: any[] = [], action: any) => {\r\n  switch (action.type) {\r\n    case ADD_TOMATO:\r\n      return [...state, action.payload]\r\n    case INIT_TOMATOES:\r\n      return [...action.payload]\r\n    case UPDATE_TOMATO:\r\n      return state.map((t: any) => {\r\n        if (t.id === action.payload.id) {\r\n          return action.payload\r\n        } else {\r\n          return t\r\n        }\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default tomatoes;","import { combineReducers } from 'redux'\r\nimport todos from './todos'\r\nimport tomatoes from './tomatoes'\r\n\r\nexport default combineReducers({\r\n  todos, tomatoes\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport rootReducers from './redux/reducers'\r\nimport './index.scss';\r\n\r\nconst store = createStore(rootReducers)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}